x
print(x)
x <- 5
print(x)
x <- 5
print(x)
source("~/Documents/R/HW1/test.R")
print(x)
source("~/Documents/R/HW1/test.R")
clear
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R")
source("~/Documents/R/HW1/test.R")
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/test.R", echo=TRUE)
source("~/Documents/R/HW1/rolldie.R")
source("~/Documents/R/HW1/rolldie.R", echo=TRUE)
source("~/Documents/R/HW1/rolldie.R", echo=TRUE)
source("~/Documents/R/HW1/rolldie.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
x
roll.die <- function(n){ # Create a function roll.die(n) where n is no. of rolls
set.seed(463) # Setting the seed for generating random sequence of numbers
die <- c(1,2,3,4,5,6) # A vector 'die' containing the die faces 1 to 6
results <- sample(die, size=n, replace=TRUE) # Simulate rolling die n times, put the sample into vector 'results'
get5 <- sum(results==5) # Sum the numbers of 5 in vector 'results' to variable 'get5'
prob5 <- get5/n # Calculate the probability of getting 5 by dividing 'get5' by n
different <- abs(prob5-(1/6)) # Calculate the difference between 'prob5' and 1/6 into variable 'different'
cat("rolling = ", n, "\n", "Probability of getting 5 = ", prob5, "\n") # display the rolling amount and the probability of rolling to get 5
cat("difference = ", different, "\n\n") # display the value from variable 'different'
}
x
x
x
x
x
x
x
x
x
x
x <- 2 * (10**50)
x
x
x
x <- 2 * (10**21)
x
x
x <- 2 * (10**22)
x
x <- 2 * (10**19)
x
x <- 2 * (10**30)
x
x <- 2 * (10**23)
x
x <- 2 * (10**23)
x
x <- 2 * (10**22)
x
x <- 2 * (10^22)
x
x <- 2 * (10^20)
x
x <- 2 * (10^20)
x
roll.die(1 * (10^20)) # Calling the function 'roll.die(n)' where n is 1000
roll.die(1 * (10^19)) # Calling the function 'roll.die(n)' where n is 1000
x = 10^25
x
x
x = 10^20
x
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
x = 10^21
x
x = 10^19
x
x = 10^20
x
x = 10^23
x
x = 10^22
x
x = 10^24
x
x = 10^25
x
x = 0.1
x
x = 0
x
x = -100
x
x = -0.5
x
x = 0.2131
x
x = 10^20
x
roll.die <- function(n){ # Create a function roll.die(n) where n is no. of rolls
set.seed(463) # Setting the seed for generating random sequence of numbers
die <- c(1,2,3,4,5,6) # A vector 'die' containing the die faces 1 to 6
results <- sample(die, size=n, replace=TRUE) # Simulate rolling die n times, put the sample into vector 'results'
get5 <- sum(results==5) # Sum the numbers of 5 in vector 'results' to variable 'get5'
prob5 <- get5/n # Calculate the probability of getting 5 by dividing 'get5' by n
different <- abs(prob5-(1/6)) # Calculate the difference between 'prob5' and 1/6 into variable 'different'
cat("rolling = ", n, "\n", "Probability of getting 5 = ", prob5, "\n") # display the rolling amount and the probability of rolling to get 5
cat("difference = ", different, "\n\n") # display the value from variable 'different'
}
x = 10^20
x
x = 10^25
x
options(scipen=25) # Format the displayed numbers to be without scientific notation
x = 10^25
x
source("~/Documents/R/HW1/roll_die.R", echo=TRUE)
